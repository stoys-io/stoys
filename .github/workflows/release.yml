name: release

on:
  push:
    branches:
      - release
#  release:
#    types:
#      - created

# Should we set release version from github (in run)?
#          mvn --batch-mode org.codehaus.mojo:versions-maven-plugin:2.8.1:set -DnewVersion=${GITHUB_REF##*/}

jobs:
  publish__default:
    runs-on: ubuntu-latest

    name: default

    steps:
      - uses: actions/checkout@v2

      - name: Cache ~/.m2/repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-default-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-default-maven-

      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Publish to the Maven Central Repository
        run: |
          echo "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | gpg --batch --import
          mvn --no-transfer-progress --batch-mode clean deploy -Dgpg.passphrase=${{ secrets.OSSRH_GPG_PASSPHRASE }} -Possrh-release
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

#      - name: Set up Java for publishing to GitHub Packages
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: Publish to GitHub Packages
#        run: |
#          mvn --batch-mode clean deploy -Pgithub-release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release__legacy:
    runs-on: ubuntu-latest

    name: legacy

    steps:
      - uses: actions/checkout@v2

      - name: Cache ~/.m2/repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-legacy-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-legacy-maven-

      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 8
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Publish to the Maven Central Repository
        run: |
          echo "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | gpg --batch --import
          mvn --no-transfer-progress --batch-mode clean deploy -Dgpg.passphrase=${{ secrets.OSSRH_GPG_PASSPHRASE }} -Pjava-8,scala-2.11,spark-2.4,ossrh-release
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

#      - name: Set up Java for publishing to GitHub Packages
#        uses: actions/setup-java@v1
#        with:
#          java-version: 8
#
#      - name: Publish to GitHub Packages
#        run: mvn --batch-mode clean deploy -Pjava-8,scala-2.11,spark-2.4,github-release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
