name: release

on:
  push:
    branches:
      - release
#  release:
#    types:
#      - created

# Should we set release version from github (in run)?
#          mvn --batch-mode org.codehaus.mojo:versions-maven-plugin:2.8.1:set -DnewVersion=${GITHUB_REF##*/}

jobs:
  publish:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: default
            java_version: 8
            maven_extra_args: -Pjava-8,scala-2.12,spark-3.0
            experimental: false
          - name: legacy
            java_version: 8
            maven_extra_args: -Pjava-8,scala-2.11,spark-2.4
            experimental: false
#          - name: future
#            java_version: 15
#            maven_extra_args: -Pjava-15,scala-2.13,spark-3.2
#            experimental: true

    continue-on-error: ${{ matrix.experimental }}

    name: ${{ matrix.name }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: ${{ matrix.java_version }}
          cache: maven

      - name: Build with Maven
        run: mvn --batch-mode package ${{ matrix.maven_extra_args }}

#      - name: Publish to GitHub Packages
#        run: mvn --batch-mode deploy ${{ matrix.maven_extra_args }} -Pgithub-release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK for publishing to Maven Central Repository
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: ${{ matrix.java_version }}
          cache: maven
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          gpg-passphrase: OSSRH_GPG_PASSPHRASE

      - name: Publish to the Maven Central Repository
        run: mvn --batch-mode deploy -Dgpg.passphrase=${{ secrets.OSSRH_GPG_PASSPHRASE }} ${{ matrix.maven_extra_args }} -Possrh-release
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          OSSRH_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_PASSPHRASE }}
